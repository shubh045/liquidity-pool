/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LiquidityPool,
  LiquidityPoolInterface,
} from "../../../contracts/Liquidity.sol/LiquidityPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC_20",
        name: "_rbnt",
        type: "address",
      },
      {
        internalType: "contract ERC_20",
        name: "_shubh",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "RBNT",
    outputs: [
      {
        internalType: "contract ERC_20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHUBH",
    outputs: [
      {
        internalType: "contract ERC_20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "checkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "_rbnt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shubh",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveRBNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveSHUBH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010a6380380620010a683398181016040528101906200003791906200013e565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000185565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b60006200010682620000e5565b9050919050565b6200011881620000f9565b81146200012457600080fd5b50565b60008151905062000138816200010d565b92915050565b60008060408385031215620001585762000157620000c0565b5b6000620001688582860162000127565b92505060206200017b8582860162000127565b9150509250929050565b610f1180620001956000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806366c1be5f1161005b57806366c1be5f1461012a5780638b9f2678146101485780639cd441da14610166578063d613d3871461018257610088565b806312065fe01461008d57806315d672dc146100ab57806353556559146100c95780635f515226146100f9575b600080fd5b6100956101a0565b6040516100a29190610a41565b60405180910390f35b6100b3610242565b6040516100c09190610a41565b60405180910390f35b6100e360048036038101906100de9190610a8d565b610248565b6040516100f09190610a41565b60405180910390f35b610113600480360381019061010e9190610b18565b6105fe565b604051610121929190610b45565b60405180910390f35b610132610740565b60405161013f9190610bcd565b60405180910390f35b610150610764565b60405161015d9190610a41565b60405180910390f35b610180600480360381019061017b9190610be8565b61076a565b005b61018a6109f0565b6040516101979190610bcd565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101fc9190610c37565b602060405180830381865afa158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610c67565b905090565b60025481565b600080821180156102f2575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102ad9190610c37565b602060405180830381865afa1580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610c67565b8211155b610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890610cf1565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161038e93929190610d11565b6020604051808303816000875af11580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610d80565b5060006103e86103e5846103e59190610ddc565b6103ef9190610e4d565b9050806002546103ff9190610e7e565b8160035461040d9190610ddc565b6104179190610e4d565b9150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610476929190610eb2565b6020604051808303816000875af1158015610495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b99190610d80565b506105f860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105169190610c37565b602060405180830381865afa158015610533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105579190610c67565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105b29190610c37565b602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f39190610c67565b610a16565b50919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161065a9190610c37565b602060405180830381865afa158015610677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069b9190610c67565b9150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016106f89190610c37565b602060405180830381865afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190610c67565b9050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016107c793929190610d11565b6020604051808303816000875af11580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a9190610d80565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161086a93929190610d11565b6020604051808303816000875af1158015610889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ad9190610d80565b506109ec60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161090a9190610c37565b602060405180830381865afa158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b9190610c67565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109a69190610c37565b602060405180830381865afa1580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e79190610c67565b610a16565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600281905550806003819055505050565b6000819050919050565b610a3b81610a28565b82525050565b6000602082019050610a566000830184610a32565b92915050565b600080fd5b610a6a81610a28565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa2610a5c565b5b6000610ab184828501610a78565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae582610aba565b9050919050565b610af581610ada565b8114610b0057600080fd5b50565b600081359050610b1281610aec565b92915050565b600060208284031215610b2e57610b2d610a5c565b5b6000610b3c84828501610b03565b91505092915050565b6000604082019050610b5a6000830185610a32565b610b676020830184610a32565b9392505050565b6000819050919050565b6000610b93610b8e610b8984610aba565b610b6e565b610aba565b9050919050565b6000610ba582610b78565b9050919050565b6000610bb782610b9a565b9050919050565b610bc781610bac565b82525050565b6000602082019050610be26000830184610bbe565b92915050565b60008060408385031215610bff57610bfe610a5c565b5b6000610c0d85828601610a78565b9250506020610c1e85828601610a78565b9150509250929050565b610c3181610ada565b82525050565b6000602082019050610c4c6000830184610c28565b92915050565b600081519050610c6181610a61565b92915050565b600060208284031215610c7d57610c7c610a5c565b5b6000610c8b84828501610c52565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610cdb601483610c94565b9150610ce682610ca5565b602082019050919050565b60006020820190508181036000830152610d0a81610cce565b9050919050565b6000606082019050610d266000830186610c28565b610d336020830185610c28565b610d406040830184610a32565b949350505050565b60008115159050919050565b610d5d81610d48565b8114610d6857600080fd5b50565b600081519050610d7a81610d54565b92915050565b600060208284031215610d9657610d95610a5c565b5b6000610da484828501610d6b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610de782610a28565b9150610df283610a28565b9250828202610e0081610a28565b91508282048414831517610e1757610e16610dad565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5882610a28565b9150610e6383610a28565b925082610e7357610e72610e1e565b5b828204905092915050565b6000610e8982610a28565b9150610e9483610a28565b9250828201905080821115610eac57610eab610dad565b5b92915050565b6000604082019050610ec76000830185610c28565b610ed46020830184610a32565b939250505056fea26469706673582212207760238d3e3b1d53dd26e016fcec282aae3da8fcace17d9a72b7b5fe7c8d430064736f6c63430008180033";

type LiquidityPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPool__factory extends ContractFactory {
  constructor(...args: LiquidityPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _rbnt: AddressLike,
    _shubh: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_rbnt, _shubh, overrides || {});
  }
  override deploy(
    _rbnt: AddressLike,
    _shubh: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_rbnt, _shubh, overrides || {}) as Promise<
      LiquidityPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LiquidityPool__factory {
    return super.connect(runner) as LiquidityPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPoolInterface {
    return new Interface(_abi) as LiquidityPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LiquidityPool {
    return new Contract(address, _abi, runner) as unknown as LiquidityPool;
  }
}
